// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: protobuf/grpc_server.proto

#include "protobuf/grpc_server.pb.h"
#include "protobuf/grpc_server.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace azureConnectorGrpcServer {

static const char* GrpcServer_method_names[] = {
  "/azureConnectorGrpcServer.GrpcServer/TransformData",
};

std::unique_ptr< GrpcServer::Stub> GrpcServer::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< GrpcServer::Stub> stub(new GrpcServer::Stub(channel, options));
  return stub;
}

GrpcServer::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_TransformData_(GrpcServer_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  {}

::grpc::ClientReaderWriter< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>* GrpcServer::Stub::TransformDataRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>::Create(channel_.get(), rpcmethod_TransformData_, context);
}

void GrpcServer::Stub::async::TransformData(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::azureConnectorGrpcServer::Data,::azureConnectorGrpcServer::Response>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::azureConnectorGrpcServer::Data,::azureConnectorGrpcServer::Response>::Create(stub_->channel_.get(), stub_->rpcmethod_TransformData_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>* GrpcServer::Stub::AsyncTransformDataRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>::Create(channel_.get(), cq, rpcmethod_TransformData_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>* GrpcServer::Stub::PrepareAsyncTransformDataRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>::Create(channel_.get(), cq, rpcmethod_TransformData_, context, false, nullptr);
}

GrpcServer::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      GrpcServer_method_names[0],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< GrpcServer::Service, ::azureConnectorGrpcServer::Data, ::azureConnectorGrpcServer::Response>(
          [](GrpcServer::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::azureConnectorGrpcServer::Response,
             ::azureConnectorGrpcServer::Data>* stream) {
               return service->TransformData(ctx, stream);
             }, this)));
}

GrpcServer::Service::~Service() {
}

::grpc::Status GrpcServer::Service::TransformData(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::azureConnectorGrpcServer::Response, ::azureConnectorGrpcServer::Data>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace azureConnectorGrpcServer

